{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onClick","className","map","todo","id","completed","classNames","title","type","TodoFilter","query","setQuery","reset","selectFilter","setSelectFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","isLoading","setIsLoading","userId","useEffect","getUser","resUser","href","email","name","App","setTodos","setSelectedTodo","allTodos","useCallback","showModal","visibleTodos","filter","isInclude","toLowerCase","includes","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd411c99.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onClick: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onClick,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onClick(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': todo !== selectedTodo,\n                  'fa-eye-slash': todo === selectedTodo,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  reset: () => void,\n  selectFilter: string,\n  setSelectFilter: (selectFilter: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  reset,\n  selectFilter,\n  setSelectFilter,\n}) => (\n\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectFilter}\n          onChange={(event) => setSelectFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={reset}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id, title, userId } = todo;\n\n  useEffect(() => {\n    getUser(userId).then(resUser => {\n      setUser(resUser);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {\n                  todo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>\n                }\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [selectFilter, setSelectFilter] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(allTodos => {\n      setIsLoading(false);\n      setTodos(allTodos);\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  const showModal = useCallback(\n    (todo: Todo) => {\n      setSelectedTodo(todo);\n    },\n    [],\n  );\n\n  const hideModal = () => {\n    setSelectedTodo(null);\n  };\n\n  const visibleTodos = todos.filter(todo => {\n    const isInclude = todo.title.toLowerCase().includes(query.toLowerCase());\n\n    switch (selectFilter) {\n      case 'all':\n        return isInclude;\n\n      case 'active':\n        return !todo.completed && isInclude;\n\n      case 'completed':\n        return todo.completed && isInclude;\n\n      default:\n        throw new Error('error!');\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                reset={reset}\n                selectFilter={selectFilter}\n                setSelectFilter={setSelectFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onClick={showModal}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onClose={hideModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}